provider "azurerm" {
  features {}
}
// Locals block to filter out settings that require a new resource group
locals {
  rg_required_settings = [for setting in var.application_insights_settings : setting if setting.require_new_resource_group]
}

// Create Resource Groups based on filtered settings
resource "azurerm_resource_group" "rg" {
  for_each = { for setting in local.rg_required_settings : "${setting.resource_group_name}-${setting.name}" => setting }

  location = each.value.resource_group_location
  name     = each.value.resource_group_name

  tags = var.tags
}

// Create Application Insights resources
resource "azurerm_application_insights" "appi" {
  for_each = { for setting in var.application_insights_settings : "${setting.resource_group_name}-${setting.name}" => setting }

  application_type                      = each.value.application_type
  daily_data_cap_in_gb                  = each.value.daily_data_cap_in_gb
  daily_data_cap_notifications_disabled = each.value.daily_data_cap_notifications_disabled
  disable_ip_masking                    = each.value.disable_ip_masking
  force_customer_storage_for_profiler   = each.value.force_customer_storage_for_profiler
  internet_ingestion_enabled            = each.value.internet_ingestion_enabled
  internet_query_enabled                = each.value.internet_query_enabled
  local_authentication_disabled         = each.value.local_authentication_disabled
  location                              = each.value.resource_group_location
  name                                  = each.value.name
  retention_in_days                     = each.value.retention_in_days
  resource_group_name                   = each.value.resource_group_name
  sampling_percentage                   = each.value.sampling_percentage
  workspace_id                          = each.value.workspace_id

  tags = var.tags

  depends_on = [
    azurerm_resource_group.rg
  ]
}

// Application Insights Settings
variable "application_insights_settings" {
  description = "List of settings for Application Insights instances"

  type = list(object({
    name                                  = string
    require_new_resource_group            = bool
    resource_group_name                   = string
    resource_group_location               = string
    application_type                      = string
    daily_data_cap_in_gb                  = number
    daily_data_cap_notifications_disabled = bool
    retention_in_days                     = number
    sampling_percentage                   = number
    disable_ip_masking                    = bool
    workspace_id                          = string
    local_authentication_disabled         = bool
    internet_ingestion_enabled            = bool
    internet_query_enabled                = bool
    force_customer_storage_for_profiler   = bool
  }))

  // Validation for application type
  validation {
    condition = alltrue([
      for s in var.application_insights_settings : s.application_type == "web"
    ])
    error_message = "The only valid value for application_type is web."
  }

  // Validation for sampling percentage
  validation {
    condition = alltrue([
      for appi in var.application_insights_settings : contains([100, 50, 33, 25, 12.5, 8.3, 4, 2, 1], appi.sampling_percentage)
    ])
    error_message = "Valid Data Sampling percentages are 100, 50, 33, 25, 12.5, 8.3, 4, 2, and 1."
  }

  // Validation for location
  validation {
    condition = alltrue([
      for appi in var.application_insights_settings : contains([
        "West Europe",
        "North Europe",
      ], appi.resource_group_location)
    ])
    error_message = "Valid locations are West Europe and North Europe."
  }
}

// Common tags for all Azure resources
variable "tags" {
  description = "Common tags for all resources"
  type        = map(string)
  default = {
    Environment = "www.jorgebernhardt.com"
    Terraform   = "true"
  }
}
// Output Resource Group Names
output "rg_names" {
  value = {
    for settings in local.rg_required_settings :
    settings.name => azurerm_resource_group.rg["${settings.resource_group_name}-${settings.name}"].name
  }
  description = "The names of the created or managed Azure Resource Groups."
}

// Output Application Insights Instrumentation Keys
output "appi_instrumentation_keys" {
  value = {
    for settings in var.application_insights_settings :
    settings.name => azurerm_application_insights.appi["${settings.resource_group_name}-${settings.name}"].instrumentation_key
  }
  description = "The Instrumentation Keys for the Application Insights resources."
  sensitive   = true  // Mark the output as sensitive data
}

// Output Application Insights App IDs
output "appi_ids" {
  value = {
    for settings in var.application_insights_settings :
    settings.name => azurerm_application_insights.appi["${settings.resource_group_name}-${settings.name}"].app_id
  }
  description = "The App IDs for the Application Insights resources."
}
